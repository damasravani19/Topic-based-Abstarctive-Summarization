Software patents are a disaster. The courts finally did something about it in 2014.
For two decades, people in Silicon Valley have been  . People would get patents on broad concepts like   or  , and then sue anyone who happened to stumble across the same concept. Thanks to this kind of frivolous  litigation, patents in the software industry may actually be   instead of encouraging it. But until recently, complaints about excessive patenting of software mostly fell on deaf ears. The patent office issued tens of thousands of new software patents every year, and the courts upheld most of them. Congress showed little interest in addressing the issue. But in June 2014, everything changed. A   placed stricter limits on software patents for the first time in more than 30 years. Lower courts followed suit, nixing   in the second half of 2014. And the patent office has begun to look at patents on software with a more skeptical eye. There's likely to be more good news ahead for software patent skeptics. This year's court rulings are a reflection of growing public concern about excessive patenting in the software industry. That skepticism is likely to drive further restrictions in the years ahead.   
 Justice Clarence Thomas wrote the   decision for a unanimous court. (Alex Wong/Getty Images) In a sense, there was little that was new about the Supreme Court's June decision. When the high court first considered the patentability of software in the 1970s, it issued two rulings limiting patents on software. At the time, many people interpreted these opinions as holding that software could not be patented at all. But the courts became more friendly to patenting in the 1980s and 1990s, and by the end of the century, all meaningful limits on patenting software had been removed. As a result, the patent office issued tens of thousands of software patents per year in the late 1990s and early 2000s. Before long, the technology sector suffered from a surge of often-frivolous patent litigation. In the last decade, the pendulum has begun to swing in the other direction. Beginning in 2005, a series of Supreme Court rulings made patents harder to get and harder to enforce. Those rulings prompted lower courts and the patent office to place new limits on patents and patent enforcement. This year, in a case called  , the Supreme Court rejected a patent that claimed the concept of using a computer to hedge against counterparty risk — the risk that one party to a contract will fail to pay up. The high court ruled that abstract concepts like hedging weren't eligible for patent protection, and merely implementing an abstract idea on a computer wasn't enough to turn it into a patentable invention.   
 Google CEO Larry Page. (Justin Sullivan/Getty Images) The $64 billion question in the patent world is — what counts as an abstract invention? The Supreme Court was vague about this — it said that hedging against counterparty risk was too abstract a concept to merit patent protection, but it didn't say which software concepts, if any, were concrete enough to qualify for a patent. That's a worrying sign for software patent defenders because in a sense   software is abstract. At its most basic level, a computer program is a collection of mathematical algorithms. All computer programs take abstract data and manipulate it to produce other abstract data. If abstract patents can't be patented, that could exclude most or even all software from patent protection. Indeed, patent scholar — and software patent supporter — Robert Merges is worried about precisely that outcome. In a  , he used the famous PageRank patent, issued to Google founder Larry Page, as an example: The Page patent claims what is known as the page rank algorithm: a way of weighting web pages by the density of links to them. The idea is that when a web search turns up various web pages that include the search term, the more important pages will be those that show a density of links to and from them. This idea was key to the early success of Google in gaining a reputation for superior search results, and the rest (as they say) is history. It is conceivable that the claims in this patent could be characterized as too abstract under  . If a court were to become convinced that the Page patent claimed the abstract idea of "weighting," it might be invalid. Another prominent patent scholar, Mark Lemley,   that "a majority of the software patents being litigated right now, I think, are invalid under  ." It's too early to know how far the courts will go in striking down software patents, but so far the   ruling seems to be having a big impact. Within three months of the Supreme Court's June ruling, lower courts had   rejecting software patents. By November, the courts had  , more than in any previous year. The patent office, too, has   to get software patents. A study found that the division of the patent office that focuses on business methods — the type of software patent at issue in the   case — went from rejecting 24 percent of applications in January 2014 to rejecting 78 percent in July. There are still hundreds of thousands of software patents out there. But recent court rulings will have a big impact on the value of these patents even if most of them are never tested in court. That's because negotiations between patent holders and potential defendants are driven by each side's estimate of his or her chances of winning in court. As the courts become more skeptical of software patents, software patent holders will be less able to drive a hard bargain in licensing negotiations. Patent trolling will become less profitable and litigation less common. Greater judicial skepticism of software patents will depress the value of all software patents, not just those that ultimately wind up in court. In short, 2014 represented a turning point in the software patent debate. The Supreme Court ruled on whether you can patent software for the first time in a generation. And the results have been very bad for anyone who owns a software patent. Get our newsletter in your inbox twice a week. 